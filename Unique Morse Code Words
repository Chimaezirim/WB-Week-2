class Solution {
    public int uniqueMorseRepresentations(String[] words) {
        Map<Character, String> morseCode = new HashMap<>();
        morseCode.put('a',".-");
        morseCode.put('b',"-...");
        morseCode.put('c',"-.-.");
        morseCode.put('d',"-..");
        morseCode.put('e',".");
        morseCode.put('f',"..-.");
        morseCode.put('g',"--.");
        morseCode.put('h',"....");
        morseCode.put('i',"..");
        morseCode.put('j',".---");
        morseCode.put('k',"-.-");
        morseCode.put('l',".-..");
        morseCode.put('m',"--");
        morseCode.put('n',"-.");
        morseCode.put('o',"---");
        morseCode.put('p',".--.");
        morseCode.put('q',"--.-");
        morseCode.put('r',".-.");
        morseCode.put('s',"...");
        morseCode.put('t',"-");
        morseCode.put('u',"..-");
        morseCode.put('v',"...-");
        morseCode.put('w',".--");
        morseCode.put('x',"-..-");
        morseCode.put('y',"-.--");
        morseCode.put('z',"--..");
        
        String[] codedWords = new String[words.length];
        String code = "";
        
        for(int i = 0; i < words.length; i++){
            for(int j = 0; j < words[i].length(); j++){
                code = code + morseCode.get(words[i].charAt(j));
            }
            codedWords[i] = code;
            code = "";
        } 
        
        int number = 0;
        int count = 0;
        for(String morse : codedWords){
            int check = 0;
            for(int i = count; i >= 0; i--){
                if(morse.equals(codedWords[i])){
                    check++;
                }
            }
            count++;
            if(check == 1)
                number++;
        }
        return number;
    }
}
